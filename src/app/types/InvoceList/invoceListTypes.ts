export type InvoceTableType = {
    numberOfParty: number;
    countOfPriceTag: string;
    countOfLabels: string;
    nameOfItem: string;
    arivalName: string;	
    markingStatus: string;
    TSOGroup: string;
    markingCategory: string;
    VATRate: string;
    quantityPack: string;
    numberParts: string;
    priceWithoutVAT: string;
    priceWithVAT: string;
    wholesalePriceWithoutVAT: string;
    wholesalePriceWithVAT: string;
    amountWholesaleWithoutVAT: string;
    amountVATWholesale: string;
    wholesaleAmountWithVATRetail: string;
    marginRublesPriceWithoutVAT: string;
    maxWholesalePriceRetailWithVAT: string;
    maxRetailPrice: string;
    retailAmountWithVAT: string;
    priceRegistryInvoice: string;
    expirationDate: string;
    series: string;
    manufacturerBarcode: string;
    currentBalance: string;
    lastRetailPriceWithVAT: string;
    GTDnumber: string;
    certificate: string;
    dateCertificate: string;
    laboratoryNumber: string;
    priceRegistryReference: string;
    ZHNVLS: string;
    batchNumber: string;
    internalBarcode: string;
    pharmaceuticalGroup: string;
    storageLocation: string;
    percentageWholesaleMargin: string;
    priceRetailWithoutVAT:string;
    maxNational: string;
    excise: string;
    dutyMargin: string;
    lot: string;
    productCode: string;
    priceRetailWithDiscount: string;
    reasonClaim: string;
    markingFeature: string;
    dateSaleManufacturer: string;
    comment: string;
    dataRosnPriceWithVAT: string;
    dataRosnPriceWithoutVAT: string;
    dataMaxRetailPrice: string;
    dataMarginWholesalePriceWithVAT: string;
    dataMarginManufacturerPriceWithoutVAT: string;
    dataCOCGroupWarehouseMargin: string;
    originalPriceWithVAT: string;
    INN: string;
    factoryPackaging: string;
    productGroupCode: string;
    nameProductGroup: string;
    numberUnitChanges: string;
    numberShelvingCards: string;
    nameSupplierProduct : string;
    nameManufactureSupplier: string;
}